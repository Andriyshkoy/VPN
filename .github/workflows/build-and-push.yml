name: Build and Push Docker Images

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: production
    
    strategy:
      matrix:
        include:
          - name: vpn-base
            dockerfile: ./Dockerfile
            context: .
            image: vpn-base
          - name: admin
            dockerfile: ./admin/Dockerfile
            context: .
            image: vpn-admin
          - name: bot
            dockerfile: ./bot/Dockerfile
            context: .
            image: vpn-bot
          - name: alembic
            dockerfile: ./alembic/Dockerfile
            context: .
            image: vpn-alembic
          - name: scripts
            dockerfile: ./scripts/Dockerfile
            context: .
            image: vpn-scripts
          - name: nginx
            dockerfile: ./nginx/Dockerfile
            context: ./nginx
            image: vpn-nginx

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.REGISTRY_USERNAME }}/${{ matrix.image }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build vpn-base first (if needed)
      if: matrix.name != 'vpn-base' && matrix.name != 'nginx'
      run: |
        docker build -t vpn-base:latest -f ./Dockerfile .

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.context }}
        file: ${{ matrix.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Deploy notification
      run: |
        echo "All images built and pushed successfully!"
        echo "Images available at:"
        echo "- ${{ secrets.REGISTRY_USERNAME }}/vpn-base:latest"
        echo "- ${{ secrets.REGISTRY_USERNAME }}/vpn-admin:latest"
        echo "- ${{ secrets.REGISTRY_USERNAME }}/vpn-bot:latest"
        echo "- ${{ secrets.REGISTRY_USERNAME }}/vpn-alembic:latest"
        echo "- ${{ secrets.REGISTRY_USERNAME }}/vpn-scripts:latest"
        echo "- ${{ secrets.REGISTRY_USERNAME }}/vpn-nginx:latest"
