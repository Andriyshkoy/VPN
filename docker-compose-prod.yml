version: "3.9"

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    restart: unless-stopped

  base:
    image: andriyshkoy/vpn-base:latest

  core:
    image: andriyshkoy/vpn-core:latest
    depends_on:
      - base
    env_file:
      - .env
    volumes:
      - core_code:/app/core

  migrations:
    image: andriyshkoy/vpn-migrations:latest
    depends_on:
      db:
        condition: service_healthy
      base:
        condition: service_started
    env_file:
      - .env
    volumes:
      - core_code:/app/core

  admin:
    image: andriyshkoy/vpn-admin:latest
    depends_on:
      - db
      - core
      - migrations
    env_file:
      - .env
    restart: on-failure
    volumes:
      - core_code:/app/core

  bot:
    image: andriyshkoy/vpn-bot:latest
    depends_on:
      - db
      - core
      - migrations
      - redis
    env_file:
      - .env
    restart: on-failure
    volumes:
      - core_code:/app/core

  rq_worker:
    image: andriyshkoy/vpn-billing:latest
    command: ./billing_daemon/entrypoint_worker.sh
    depends_on:
      - redis
      - core
      - db
      - migrations
    env_file:
      - .env
    restart: always
    volumes:
      - core_code:/app/core

  rq_scheduler:
    image: andriyshkoy/vpn-billing:latest
    command: ./billing_daemon/entrypoint_scheduler.sh
    depends_on:
      - redis
      - core
      - db
      - migrations
    env_file:
      - .env
    restart: always
    volumes:
      - core_code:/app/core

  admin_frontend:
    image: andriyshkoy/vpn-admin-frontend:latest
    depends_on:
      - admin
    env_file:
      - ./admin_frontend/.env

  nginx:
    image: andriyshkoy/vpn-nginx:latest
    depends_on:
      - admin_frontend
    ports:
      - "14081:80"

volumes:
  db_data:
  core_code:
