services:
  base:
    image: andriyshkoy/vpn-base:latest

  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  migrations:
    image: andriyshkoy/vpn-migrations:latest
    depends_on:
      db:
        condition: service_healthy
      base:
        condition: service_started
    env_file:
      - .env
    volumes:
      - core_code:/app/core

  admin:
    image: andriyshkoy/vpn-admin:latest
    depends_on: [db, base, migrations]
    env_file:
      - .env
    restart: on-failure
    volumes:
      - core_code:/app/core

  bot:
    image: andriyshkoy/vpn-bot:latest
    depends_on: [db, base, migrations]
    env_file:
      - .env
    restart: on-failure
    volumes:
      - core_code:/app/core
    
  billing_daemon:
    image: andriyshkoy/vpn-billing:latest
    depends_on: [db, base, migrations]
    env_file:
      - .env
    restart: on-failure
    volumes:
      - core_code:/app/core

  nginx:
    image: andriyshkoy/vpn-nginx:latest
    depends_on: [admin, bot]
    ports:
      - "80:80"
  
volumes:
  db_data:
  core_code:
